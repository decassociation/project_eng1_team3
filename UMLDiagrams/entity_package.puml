@startuml
'https://plantuml.com/class-diagram
package "entity"{

class Cook extends Entity{
-{static} int MAX_STACK_SIZE
-{static} int FRAME_COLS
-{static} int FRAME_ROWS
-Vector2 direction
-int cookno
-Texture walkSheet
-Animation<TextureRegion> walkAnimation
-TextureRegion[][] spriteSheet
-TextureRegion[][] currentFrame
-TextureRegion[] walkFrames
-float stateTime
+boolean locked
+boolean holding
+Stack<Ingredient> heldItems
+Cook(pos:Vector2, cooknum:int)
+void update(control:Control, dt:float, cl:CollisionTile[][])
+void pickUpItem(item:Ingredient)
+void dropItem()
+boolean full()
+void draw_bot(batch:SpriteBatch)
+void draw_top(batch:SpriteBatch)
+void draw_top(batch:SpriteBatch, position:Vector2)
-void setWalkTexture(path:String)
-void setWalkFrames(row:int)
+Boolean checkCollision(cookx:float, cooky:float, cltiles:CollisionTile[][])
+Rectangle getCollideBoxAtPosition(x:float, y:float)
}

class Customer{
~int targetsquare
+int posx
+int posy
~Texture textf
~Texture textb
~Texture textr
~Texture textl
~TextureRegion[][] custpartsf
~TextureRegion[][] custpartsb
~TextureRegion[][] custpartsr
~TextureRegion[][] custpartsl
~TextureRegion[][] currentcustparts
~int startposx
~int targetpixel
+boolean locked
+boolean readyfordeletion
-long arrivalTime
+String order
-int custNumber
+Customer(x:int, y:int, tg:int, custno:int)
+void arrived()
+long waitTime()
+void renderCustomersTop(b:Batch)
+void renderCustomersBot(b:Batch)
+void setTargetsquare(tg:int)
+void stepTarget()
+void setFront()
+void setBack()
}

class CustomerController{
~int lockout
+int amountActiveCustomers
~ArrayList<ArrayList<Integer>> customerCells
+Customer[] amountActiveCustomers
~Customer[] leavingCustomers
~TiledMap gameMap
~int top
~int bottom
~int xCoordinate
-long timeOfLastCustomer
-int timeUntilNext
-int spawnMultiple
+int totalServed
-String difficulty
-HashMap<String, Float> difficultyMultipliers
-void computerCustomerZone(gameMap: TiledMap)
+Customer spawnCustomer()
+void delCustomer(num:int)
+void delCustomer(customer:Customer)
+void drawCustTop(b1:Batch)
+void updateCustomers()
+Customer isCustomerAtPos(pos:Vector2)
}

class Entity{}

}
@enduml
